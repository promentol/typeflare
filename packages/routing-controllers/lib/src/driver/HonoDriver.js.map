{"version":3,"file":"HonoDriver.js","sourceRoot":"","sources":["../../../src/driver/HonoDriver.ts"],"names":[],"mappings":"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","sourcesContent":["import { UseMetadata,  MiddlewareMetadata,ActionMetadata, ParamMetadata } from 'routing-controllers'\nimport { Action, BaseDriver, RoleChecker, RoutingControllersOptions } from 'routing-controllers'\nimport { HonoMiddlewareInterface, } from './HonoMiddlewareInterface';\n\nimport { AuthorizationRequiredError } from \"routing-controllers\"\n\nimport { AccessDeniedError } from \"routing-controllers\"\nimport { AuthorizationCheckerNotDefinedError } from \"routing-controllers\"\nimport { NotFoundError } from \"routing-controllers\"\n\n// import { isPromiseLike } from '../../util/isPromiseLike';\nimport { getFromContainer } from 'routing-controllers';\n// import { NotFoundError } from '../../index';\nimport { Hono, Context } from 'hono'\nimport { cors } from 'hono/cors'\n\nimport { getCookie, getSignedCookie, setCookie, setSignedCookie, deleteCookie } from 'hono/cookie'\n// import templateUrl from 'template-url'\n/**\n * Integration with hono framework.\n */\nexport class HonoDriver extends BaseDriver {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n\n  constructor(public hono?: any) {\n    super();\n    this.loadHono();\n    this.app = this.hono;\n  }\n\n  // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Initializes the things driver needs before routes and middlewares registration.\n   */\n  initialize() {\n\n    if (this.cors) {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      if (this.cors === true) {\n        this.hono.use(cors());\n      } else {\n        this.hono.use(cors(this.cors as any));\n      }\n    }\n  }\n\n  /**\n   * Registers middleware that run before controller actions.\n   */\n  registerMiddleware(middleware: MiddlewareMetadata): void {\n    //TODO\n    if ((middleware.instance as HonoMiddlewareInterface).use) {\n      this.hono.use(\"*\", function (ctx: any, next: any) {\n        return (middleware.instance as HonoMiddlewareInterface).use(ctx, next);\n      });\n    }\n  }\n\n  /**\n   * Registers action in the driver.\n   */\n  registerAction(actionMetadata: ActionMetadata, executeCallback: (options: Action) => any): void {\n    // middlewares required for this action\n    const defaultMiddlewares: any[] = [];\n\n    // if (actionMetadata.isBodyUsed) {\n    //   if (actionMetadata.isJsonTyped) {\n    //     defaultMiddlewares.push(this.loadBodyParser().json(actionMetadata.bodyExtraOptions));\n    //   } else {\n    //     defaultMiddlewares.push(this.loadBodyParser().text(actionMetadata.bodyExtraOptions));\n    //   }\n    // }\n\n    if (actionMetadata.isAuthorizedUsed) {\n      defaultMiddlewares.push((context: any, next: Function) => {\n        if (!this.authorizationChecker) throw new AuthorizationCheckerNotDefinedError();\n\n        const action: Action = { request: context.request, response: context.response, context, next };\n        try {\n          const checkResult =\n            actionMetadata.authorizedRoles instanceof Function\n              ? getFromContainer<RoleChecker>(actionMetadata.authorizedRoles, action).check(action)\n              : this.authorizationChecker(action, actionMetadata.authorizedRoles);\n\n          const handleError = (result: any) => {\n            if (!result) {\n              const error =\n                actionMetadata.authorizedRoles.length === 0\n                  ? new AuthorizationRequiredError(action)\n                  : new AccessDeniedError(action);\n              return this.handleError(error, actionMetadata, action);\n            } else {\n              return next();\n            }\n          };\n\n          if (isPromiseLike(checkResult)) {\n            return checkResult\n              .then(result => handleError(result))\n              .catch(error => this.handleError(error, actionMetadata, action));\n          } else {\n            return handleError(checkResult);\n          }\n        } catch (error) {\n          return this.handleError(error, actionMetadata, action);\n        }\n      });\n    }\n\n    // if (actionMetadata.isFileUsed || actionMetadata.isFilesUsed) {\n    //   const multer = this.loadMulter();\n    //   actionMetadata.params\n    //     .filter(param => param.type === 'file')\n    //     .forEach(param => {\n    //       defaultMiddlewares.push(multer(param.extraOptions).single(param.name));\n    //     });\n    //   actionMetadata.params\n    //     .filter(param => param.type === 'files')\n    //     .forEach(param => {\n    //       defaultMiddlewares.push(multer(param.extraOptions).array(param.name));\n    //     });\n    // }\n\n    // user used middlewares\n    const uses = actionMetadata.controllerMetadata.uses.concat(actionMetadata.uses);\n    const beforeMiddlewares = this.prepareMiddlewares(uses.filter(use => !use.afterAction));\n    const afterMiddlewares = this.prepareMiddlewares(uses.filter(use => use.afterAction));\n\n    // prepare route and route handler function\n    const route = ActionMetadata.appendBaseRoute(this.routePrefix, actionMetadata.fullRoute);\n    const routeHandler = (context: any, next: () => Promise<any>) => {\n      const options: Action = { request: context.req, response: context.res, context, next };\n      return executeCallback(options);\n    };\n\n    // This ensures that a request is only processed once. Multiple routes may match a request\n    // e.g. GET /users/me matches both @All(/users/me) and @Get(/users/:id)), only the first matching route should\n    // be called.\n    // The following middleware only starts an action processing if the request has not been processed before.\n    const routeGuard = async (context: any, next: () => Promise<any>) => {\n      if (!context.get('routingControllersStarted')) {\n        context.set('routingControllersStarted', true);\n        await next();\n      }\n    };\n\n    this.hono[actionMetadata.type.toLowerCase()](route, routeGuard)\n    beforeMiddlewares.forEach((x) => {\n      this.hono[actionMetadata.type.toLowerCase()](route, x)\n    })\n    defaultMiddlewares.forEach((x) => {\n      this.hono[actionMetadata.type.toLowerCase()](route, x)\n    })\n    this.hono[actionMetadata.type.toLowerCase()](route, routeHandler)\n\n    afterMiddlewares.forEach((x) => {\n      this.hono[actionMetadata.type.toLowerCase()](route, x)\n    })\n  }\n\n  /**\n   * Registers all routes in the framework.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  registerRoutes() {}\n\n  /**\n   * Gets param from the request.\n   */\n  getParamFromRequest(action: Action, param: ParamMetadata): any {\n    const request: any = action.request;\n    const context: any = action.context;\n    switch (param.type) {\n      case 'body':\n        return request.body;\n\n      case 'body-param':\n        return request.body[param.name];\n\n      case 'param':\n        return request.param(param.name);\n\n      case 'params':\n        return request.param();\n\n      case 'session-param':\n        return request.session[param.name];\n\n      case 'session':\n        return request.session;\n\n      case 'state':\n        throw new Error('@State decorators are not supported by express driver.');\n\n      case 'query':\n        return request.query(param.name);\n\n      case 'queries':\n        return request.query();\n\n      case 'header':\n        return request.headers[param.name.toLowerCase()];\n\n      case 'headers':\n        return request.headers;\n\n      case 'file':\n        return request.file;\n\n      case 'files':\n        return request.files;\n\n      case 'cookie':\n        return getCookie(context, param.name)\n\n      case 'cookies':\n        // if (!request.headers.cookie) return {};\n        return getCookie(context)\n    }\n  }\n\n  /**\n   * Handles result of successfully executed controller action.\n   */\n  handleSuccess(result: any, action: ActionMetadata, options: Action): void {\n\n    // if the action returned the response object itself, short-circuits\n    // if (result && result === options.response) {\n    //   options?.next?.();\n    //   return;\n    // }\n\n\n    // transform result if needed\n    result = this.transformResult(result, action, options);\n\n    // set http status code\n    if (result === undefined && action.undefinedResultCode) {\n      if (action.undefinedResultCode instanceof Function) {\n        throw new (action.undefinedResultCode as any)(options);\n      }\n      options.context.status(action.undefinedResultCode);\n    } else if (result === null) {\n      if (action.nullResultCode) {\n        if (action.nullResultCode instanceof Function) {\n          throw new (action.nullResultCode as any)(options);\n        }\n        options.context.status(action.nullResultCode);\n      } else {\n        options.context.status(204);\n      }\n    } else if (action.successHttpCode) {\n      options.context.status(action.successHttpCode);\n    }\n\n    // apply http headers\n    Object.keys(action.headers).forEach(name => {\n      options.context.header(name, action.headers[name]);\n    });\n\n    if (action.redirect) {\n      // if redirect is set then do it\n      if (typeof result === 'string') {\n        return options.context.redirect(result);\n      } else if (result instanceof Object) {\n        // options.response.redirect(templateUrl(action.redirect, result));\n      } else {\n        return options.context.redirect(action.redirect);\n      }\n    // } else if (action.renderedTemplate) {\n    //   // if template is set then render it\n    //   const renderOptions = result && result instanceof Object ? result : {};\n\n    //   return options.context.render(action.renderedTemplate, renderOptions, (err: any, html: string) => {\n    //     if (err && action.isJsonTyped) {\n    //       return options.next?.(err);\n    //     } else if (err && !action.isJsonTyped) {\n    //       return options.next?.(err);\n    //     } else if (html) {\n    //       options.context.send(html);\n    //     }\n    //     options.next?.();\n    //   });\n    } else if (result === undefined) {\n      // throw NotFoundError on undefined response\n\n      if (action.undefinedResultCode) {\n        if (action.isJsonTyped) {\n          return options.context.json();\n        } else {\n          return options.context.send();\n        }\n      } else {\n        throw new NotFoundError();\n      }\n    } else if (result === null) {\n      // send null response\n      if (action.isJsonTyped) {\n        return options.context.json(null);\n      } else {\n        return options.context.send(null);\n      }\n    // } else if (result instanceof Buffer) {\n    //   // check if it's binary data (Buffer)\n    //   options.response.end(result, 'binary');\n    // } else if (result instanceof Uint8Array) {\n    //   // check if it's binary data (typed array)\n    //   options.response.end(Buffer.from(result as any), 'binary');\n    } else if (result.pipe instanceof Function) {\n      // result.pipe(options.context);\n    } else {\n      // send regular result\n      if (action.isJsonTyped) {\n        return options.context.json(result);\n      } else {\n        return options.context.text(result);\n      }\n    }\n\n    return options.context.text('anasun2')\n\n  }\n\n  /**\n   * Handles result of failed executed controller action.\n   */\n  handleError(error: any, action: ActionMetadata | undefined, options: Action): any {\n    if (this.isDefaultErrorHandlingEnabled) {\n      const response: any = options.response;\n      const context: any = options.context;\n\n      // set http code\n      // note that we can't use error instanceof HttpError properly anymore because of new typescript emit process\n      if (error.httpCode) {\n        context.status(error.httpCode);\n      } else {\n        context.status(500);\n      }\n\n      // apply http headers\n      if (action) {\n        Object.keys(action.headers).forEach(name => {\n          context.header(name, action.headers[name]);\n        });\n      }\n\n      // send error content\n      if (action && action.isJsonTyped) {\n        context.json(this.processJsonError(error));\n      } else {\n        context.send(this.processTextError(error)); // todo: no need to do it because express by default does it\n      }\n    }\n    options.next?.(error);\n  }\n\n  // -------------------------------------------------------------------------\n  // Protected Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Creates middlewares from the given \"use\"-s.\n   */\n  protected prepareMiddlewares(uses: UseMetadata[]) {\n    const middlewareFunctions: Function[] = [];\n    uses.forEach(use => {\n      if (use.middleware.prototype && use.middleware.prototype.use) {\n        // if this is function instance of MiddlewareInterface\n        middlewareFunctions.push(async (context: any, next: (err?: any) => Promise<any>) => {\n          try {\n            return await getFromContainer<HonoMiddlewareInterface>(use.middleware).use(context, next);\n          } catch (error) {\n            return await this.handleError(error, undefined, {\n              request: context.req,\n              response: context,\n              context,\n              next,\n            });\n          }\n        });\n      } else {\n        middlewareFunctions.push(use.middleware);\n      }\n    });\n    return middlewareFunctions;\n  }\n  /**\n   * Dynamically loads express module.\n   */\n  protected loadHono() {\n    // eslint-disable-next-line \n    // if (require) {\n      if (!this.hono) {\n        try {\n          // eslint-disable-next-line @typescript-eslint/no-var-requires\n          this.hono = new Hono()\n        } catch (e) {\n          throw new Error('hono package was not found installed. Try to install it: npm install hono --save');\n        }\n      }\n    // } else {\n    //   throw new Error('Cannot load hono. Try to install all required dependencies.');\n    // }\n  }\n\n  /**\n   * Dynamically loads body-parser module.\n   */\n//   protected loadBodyParser() {\n//     try {\n//       return require('body-parser');\n//     } catch (e) {\n//       throw new Error('body-parser package was not found installed. Try to install it: npm install body-parser --save');\n//     }\n//   }\n\n  /**\n   * Dynamically loads multer module.\n   */\n//   protected loadMulter() {\n//     try {\n//       return require('multer');\n//     } catch (e) {\n//       throw new Error('multer package was not found installed. Try to install it: npm install multer --save');\n//     }\n//   }\n}\n\n\nfunction isPromiseLike(arg: any): arg is Promise<any> {\n  return arg != null && typeof arg === 'object' && typeof arg.then === 'function';\n}"]}